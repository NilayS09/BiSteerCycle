function [x_ddot,y_ddot,psi_ddot] = BiSteer2D_PoseDoubleDerivatives(Ip,Tf,Tr,Vr,Vr_dot,delF,delR,delF_dot,delR_dot,lF,lR,m,psi)
%BiSteer2D_PoseDoubleDerivatives
%    [X_DDOT,Y_DDOT,PSI_DDOT] = BiSteer2D_PoseDoubleDerivatives(Ip,Tf,Tr,Vr,Vr_dot,delF,delR,delF_dot,delR_dot,lF,lR,M,PSI)

%    This function was generated by the Symbolic Math Toolbox version 9.3.
%    07-Jun-2023 06:33:16

t2 = cos(delF);
t3 = cos(delR);
t4 = cos(psi);
t5 = sin(delF);
t6 = sin(delR);
t7 = sin(psi);
t8 = delR+psi;
t9 = lF+lR;
t10 = delF.*2.0;
t11 = delR.*2.0;
t12 = lF.^2;
t13 = lR.^2;
t20 = lF.*lR.*m;
t22 = -delR;
t14 = cos(t10);
t15 = cos(t11);
t16 = t2.^2;
t17 = t2.^3;
t18 = t3.^2;
t19 = cos(t8);
t21 = sin(t8);
t23 = -t11;
t24 = 1.0./t2;
t26 = m.*t12;
t27 = m.*t13;
t30 = delF+t22;
t31 = 1.0./t9;
t36 = t10+t22;
t46 = Ip.*Vr.*delF_dot.*t2.*t3.*t6;
t47 = Ip.*Vr.*delR_dot.*t2.*t3.*t6;
t55 = Vr.*delF_dot.*t2.*t3.*t6.*t20;
t25 = 1.0./t16;
t28 = Vr.*t19;
t29 = Vr.*t21;
t32 = cos(t30);
t33 = sin(t30);
t34 = t14.*t20;
t35 = t15.*t20;
t37 = t10+t23;
t39 = Tr.*t12.*t17;
t40 = Tr.*t13.*t17;
t41 = Tr.*lF.*lR.*t17.*2.0;
t42 = t14.*t26;
t43 = t15.*t27;
t44 = Ip.*Vr.*delF_dot.*t5.*t18;
t45 = Ip.*Vr.*delR_dot.*t5.*t16;
t48 = Tf.*t3.*t12.*t16;
t49 = Tf.*t3.*t13.*t16;
t50 = Tf.*lF.*lR.*t3.*t16.*2.0;
t52 = Vr.*delR_dot.*t5.*t16.*t20;
t56 = Ip.*Vr.*delR_dot.*t3.*t6.*t17.*2.0;
t57 = Vr.*delF_dot.*t5.*t18.*t27;
t58 = Vr.*delR_dot.*t2.*t3.*t6.*t27;
t62 = -t55;
t63 = Vr.*delR_dot.*t3.*t6.*t17.*t20.*2.0;
t38 = cos(t37);
t53 = -t44;
t54 = -t45;
t61 = -t56;
t64 = -t57;
t65 = t18.*t45.*2.0;
t66 = t18.*t52.*2.0;
t51 = Ip.*t38;
t59 = t20.*t38;
t67 = -t66;
t60 = -t51;
t70 = t39+t40+t41+t46+t47+t48+t49+t50+t52+t53+t54+t58+t61+t62+t63+t64+t65+t67;
t68 = Ip+t20+t26+t27+t34+t35+t42+t43+t59+t60;
t69 = 1.0./t68;
x_ddot = -delR_dot.*(t29-Vr.*lR.*t7.*t24.*t31.*t32)+t24.*t69.*t70.*(t19-lR.*t7.*t24.*t31.*t33).*2.0-Vr.*t24.*t31.*t33.*(t29+Vr.*lR.*t4.*t24.*t31.*t33)-Vr.*delF_dot.*lR.*t3.*t7.*t25.*t31;
if nargout > 1
    y_ddot = delR_dot.*(t28-Vr.*lR.*t4.*t24.*t31.*t32)+t24.*t69.*t70.*(t21+lR.*t4.*t24.*t31.*t33).*2.0+Vr.*t24.*t31.*t33.*(t28-Vr.*lR.*t7.*t24.*t31.*t33)+Vr.*delF_dot.*lR.*t3.*t4.*t25.*t31;
end
if nargout > 2
    psi_ddot = t25.*t31.*(Vr_dot.*t6-Vr_dot.*sin(t36)-Vr.*delF_dot.*t3.*2.0+Vr.*delR_dot.*t3+Vr.*delR_dot.*cos(t36)).*(-1.0./2.0);
end
end
