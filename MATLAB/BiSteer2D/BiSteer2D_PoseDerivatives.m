function [x_dot,y_dot,psi_dot,Vr_dot] = BiSteer2D_PoseDerivatives(Ip,Tf,Tr,Vr,delF,delR,delF_dot,delR_dot,lF,lR,m,psi)
%BiSteer2D_PoseDerivatives
%    [X_DOT,Y_DOT,PSI_DOT,Vr_dot] = BiSteer2D_PoseDerivatives(Ip,Tf,Tr,Vr,delF,delR,delF_dot,delR_dot,lF,lR,M,PSI)

%    This function was generated by the Symbolic Math Toolbox version 9.3.
%    07-Jun-2023 06:33:15

t2 = cos(delF);
t3 = cos(delR);
t4 = sin(delF);
t5 = sin(delR);
t6 = delR+psi;
t7 = lF+lR;
t8 = delF.*2.0;
t9 = delR.*2.0;
t10 = lF.^2;
t11 = lR.^2;
t17 = -delR;
t12 = cos(t8);
t13 = cos(t9);
t14 = t2.^2;
t15 = t2.^3;
t16 = t3.^2;
t18 = -t9;
t19 = 1.0./t2;
t20 = delF+t17;
t21 = 1.0./t7;
t22 = sin(t20);
x_dot = Vr.*cos(t6)-Vr.*lR.*t19.*t21.*t22.*sin(psi);
if nargout > 1
    y_dot = Vr.*sin(t6)+Vr.*lR.*t19.*t21.*t22.*cos(psi);
end
if nargout > 2
    psi_dot = Vr.*t19.*t21.*t22;
end
if nargout > 3
    t23 = t8+t18;
    t24 = cos(t23);
    Vr_dot = (t19.*(Tr.*t10.*t15+Tr.*t11.*t15+Tr.*lF.*lR.*t15.*2.0+Tf.*t3.*t10.*t14+Tf.*t3.*t11.*t14-Ip.*Vr.*delF_dot.*t4.*t16-Ip.*Vr.*delR_dot.*t4.*t14+Tf.*lF.*lR.*t3.*t14.*2.0+Ip.*Vr.*delF_dot.*t2.*t3.*t5+Ip.*Vr.*delR_dot.*t2.*t3.*t5-Ip.*Vr.*delR_dot.*t3.*t5.*t15.*2.0+Ip.*Vr.*delR_dot.*t4.*t14.*t16.*2.0-Vr.*delF_dot.*m.*t4.*t11.*t16+Vr.*delR_dot.*lF.*lR.*m.*t4.*t14+Vr.*delR_dot.*m.*t2.*t3.*t5.*t11-Vr.*delF_dot.*lF.*lR.*m.*t2.*t3.*t5+Vr.*delR_dot.*lF.*lR.*m.*t3.*t5.*t15.*2.0-Vr.*delR_dot.*lF.*lR.*m.*t4.*t14.*t16.*2.0).*2.0)./(Ip-Ip.*t24+m.*t10+m.*t11+lF.*lR.*m+m.*t10.*t12+m.*t11.*t13+lF.*lR.*m.*t12+lF.*lR.*m.*t13+lF.*lR.*m.*t24);
end
end
